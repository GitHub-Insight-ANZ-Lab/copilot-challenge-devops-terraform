name: Terraform Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
                working-directory: ./

      - name: Terraform Plan
        run: terraform plan -out=tfplan.binary
                working-directory: ./

      - name: Terraform Apply
        if: success()
        run: terraform apply -auto-approve tfplan.binary
                working-directory: ./

      - name: Archive Terraform Plan
        if: success()
        run: |
          echo "Archiving the Terraform Plan output..."
          mkdir -p archive
          cp ./path/to/your/terraform/files/tfplan.binary archive/
                working-directory: ./

      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: tfplan-binary
          path: ./path/to/your/terraform/files/archive/tfplan.binary

    post:
      always:
        steps:
          - name: Cleanup
            run: |
              echo "Cleaning up..."
              rm -f ./path/to/your/terraform/files/tfplan.binary
              rm -f ./path/to/your/terraform/files/tfplan.json
      success:
        steps:
          - name: Success Message
            run: echo 'Pipeline completed successfully.'
      failure:
        steps:
          - name: Failure Message
            run: echo 'Pipeline failed. Please check the logs.'