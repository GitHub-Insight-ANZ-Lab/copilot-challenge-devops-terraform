# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# .NET Core/ASP.NET Core
project.lock.json
project.fragment.lock.json
artifacts/
## Ignore build outputs
[Bb]in/
[Oo]bj/
# .NET-specific user files
*.csproj.user
*.appsettings.development.json

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# Rider IDE
.idea/
.idea_modules/

# Visual Studio Code
.vscode/

# Rider IntelliJ
.idea/
*.sln.iml

# Mono Auto Generated Files
mono_crash.*

# NuGet Packages
*.nupkg
*.snupkg
packages/
# Include if using NuGet in the project
!packages/*/build/

# Windows-related files
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Build directories
build/
out/

# Log and crash reports
*.log
*.dmp

# Backup and temporary files
*.bak
*.swp
*.tmp
*.temp
*.log

# OS-specific files
.DS_Store
._*
.Spotlight-V100
.Trashes

# Local history
.history/
.idea/
# Coverage reports
coverage/
*.coverage
*.coveragexml

